extend type Mutation @guard(with: ["sanctum"]) {
    updateProductPricing(input: UpdateProductPricingInput! @spread): ProductPricing
        @can(ability: "update" find: "id") 
        @update

    createProductPricing(input: CreateProductPricingInput! @spread): ProductPricing 
        @can(ability: "create" model: "MayIFit\\Extension\\Shop\\Models\\ProductPricing") 
        @create

    deleteProductPricing(id: ID! @rules(apply: ["required"])): ProductPricing 
        @can(ability: "delete" find: "id") 
        @delete
}

extend type Query @guard(with: ["sanctum"]) {
    listResellerProductPricing(
        reseller_id: ID
        hasProduct: _ @whereHasConditions(columns: ["catalog_id", "name"])
    ): [ResellerProductPricing]!
    @paginate(builder: "MayIFit\\Extension\\Shop\\Models\\ProductPricing@listResellerProductPricing")

    listProductPricing(
        hasProduct: _ @whereHasConditions(columns: ["catalog_id", "name"])
    ): [ProductPricing]!
    @can(ability: "viewAny" model: "MayIFit\\Extension\\Shop\\Models\\ProductPricing") 
    @paginate(type: "paginator")

    viewProductPricing(
        id: ID! @eq
    ): ProductPricing @find
    @can(ability: "view" find: "id") 
}

input ProductPricingRelation {
    create: [CreateProductPricingInput!]
    update: [UpdateProductPricingInput!]
    connect: [ID!]
    sync: [ID!]
}

input CreateProductPricingInput {
    base_price: Float!
    wholesale_price: Float
    vat: Float!
    currency: String!
    reseller: ResellerRelation
    available_from: DateTime
    product: ProductRelation!
}

input UpdateProductPricingInput {
    id: ID!
    base_price: Float!
    wholesale_price: Float
    vat: Float!
    currency: String!
    reseller: ResellerRelation
    available_from: DateTime
    product: ProductRelation!
}

type ProductPricing @modelClass(class: "MayIFit\\Extension\\Shop\\Models\\ProductPricing") {
    id: ID!
    product: Product! @belongsTo
    base_price: Float!
    wholesale_price: Float
    vat: Float!
    available_from: DateTime
    grossPrice: Float @method(name: "getBaseGrossPriceAttribute")
    wholeSaleGrossPrice: Float @method(name: "getWholeSaleGrossPriceAttribute")
    currency: String!
    reseller: Reseller @belongsTo
}

"This type greatly differs from the ProductPricing for example the base_price here is the wholesale_prcie in the ProductPricing"
type ResellerProductPricing @modelClass(class: "MayIFit\\Extension\\Shop\\Models\\ProductPricing") {
    id: ID!
    base_price: Float!
    wholesale_price: Float!
    vat: Float!
    available_from: DateTime
    base_gross_price: Float!
    wholesale_gross_price: Float!
    currency: String!
    reseller_id: ID
    catalog_id: String!
    name: String!
    resource_url: String
}

enum ListProductPricingHasProductWhereConditions {
    CATALOG_ID @enum(value: "catalog_id")
    NAME @enum(value: "name")
}