extend type Query @guard(with: ["sanctum"]) {
    listProductPricing(
        name: String @where(operator: "like")
        catalog_id: String @where(operator: "like")
        in_stock: Boolean @neq(key: "0")
        user_id: ID
    ): [ProductPricing]!
    @can(ability: "viewAny" model: "MayIFit\\Extension\\Shop\\Models\\ProductPricing") 
    @paginate(type: "paginator")

    viewProductPricing(
        id: ID! @eq
        user_id: ID
        currency: String
    ): ProductPricing @find
    @can(ability: "view" find: "id") 
}

input ProductPricingRelation {
    create: [CreateProductPricingInput!]
    update: [UpdateProductPricingInput!]
    connect: [ID!]
    sync: [ID!]
}

input CreateProductPricingInput {
    base_price: Float!
    vat: Float!
    currency: String!
    user: UpdateUserRelation
    available_to: DateTime
}

input UpdateProductPricingInput {
    id: ID!
    base_price: Float!
    vat: Float!
    currency: String!
    user: UpdateUserRelation
    available_to: DateTime
}

type ProductPricing @modelClass(class: "\\MayIFit\\Extension\\Shop\\Models\\ProductPricing") {
    id: ID!
    product: Product! @belongsTo
    base_price: Float!
    vat: Float!
    available_to: DateTime
    grossPrice: Float @method(name: "getGrossPriceAttribute")
    currency: String!
    user: User
}