extend type Query @guard(with: ["sanctum"]) {
    allProductCategory: [ProductCategorySelect]! @all

    listProductCategory(
        name: String @where(operator: "like")
    ): [ProductCategory]!
    @can(ability: "viewAny" model: "MayIFit\\Extension\\Shop\\Models\\ProductCategory") 
    @paginate(type: "paginator")

    viewProductCategory(
        id: ID! @eq
    ): ProductCategory @find
    @can(ability: "view" find: "id") 
}

extend type Mutation @guard(with: ["sanctum"]) {
    updateProductCategory(input: UpdateProductCategoryInput! @spread): ProductCategory 
        @can(ability: "update" find: "id") 
        @update

    createProductCategory(input: CreateProductCategoryInput! @spread): ProductCategory 
        @can(ability: "create" model: "MayIFit\\Extension\\Shop\\Models\\ProductCategory") 
        @create

    deleteProductCategory(id: ID! @rules(apply: ["required"])): ProductCategory 
        @can(ability: "delete" find: "id") 
        @delete
}

input ProductCategoryRelation {
    connect: ID
}

input CreateProductCategoryInput {
    name: String!
    description: String
    parentCategory: ProductCategoryRelation
    image: UpdateDocumentHasOne
    document: UpdateDocumentHasOne
    discounts: ProductCategoryDiscountRelation
}

input UpdateProductCategoryInput {
    id: ID!
    name: String!
    description: String
    parentCategory: ProductCategoryRelation
    image: UpdateDocumentHasOne
    document: UpdateDocumentHasOne
    discounts: ProductCategoryDiscountRelation
}

type ProductCategory @modelClass(class: "\\MayIFit\\Extension\\Shop\\Models\\ProductCategory") {
    id: ID!
    name: String!
    description: String
    parentCategory: ProductCategory
    image: Document @morphOne
    document: Document @morphOne
    discounts: [ProductCategoryDiscount]! @hasMany
    getDiscountForDate(dateTime: DateTime!): ProductCategoryDiscount
        @method(passordered: true)
}

"Subset of ProductCategory "
type ProductCategorySelect @modelClass(class: "\\MayIFit\\Extension\\Shop\\Models\\ProductCategory") {
    id: ID!
    name: String!
}