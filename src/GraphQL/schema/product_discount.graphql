extend type Mutation @guard(with: ["sanctum"]) {
    updateProductDiscount(input: UpdateProductDiscountInput! @spread): ProductDiscount
        @can(ability: "update" find: "id") 
        @update

    createProductDiscount(input: CreateProductDiscountInput! @spread): ProductDiscount 
        @can(ability: "create" model: "MayIFit\\Extension\\Shop\\Models\\ProductDiscount") 
        @create

    deleteProducDiscount(id: ID! @rules(apply: ["required"])): ProductDiscount 
        @can(ability: "delete" find: "id") 
        @delete
}

extend type Query @guard(with: ["sanctum"]) {
    listProductDiscount(
        hasProduct: _ @whereHasConditions(columns: ["catalog_id", "name"])
        user_id: ID
    ): [ProductDiscount]!
    @can(ability: "viewAny" model: "MayIFit\\Extension\\Shop\\Models\\ProductDiscount") 
    @paginate(type: "paginator")

    viewProductDiscount(
        id: ID! @eq
        user_id: ID @eq
    ): ProductDiscount @find
    @can(ability: "view" find: "id") 
}

input ProductDiscountRelation {
    create: [CreateProductDiscountInput!]
    update: [UpdateProductDiscountInput!]
    connect: [ID!]
}

input CreateProductDiscountInput {
    discount_percentage: Float!
    reseller: ResellerRelation
    available_from: DateTime!
    available_to: DateTime
}

input UpdateProductDiscountInput {
    id: ID!
    discount_percentage: Float!
    reseller: ResellerRelation
    available_from: DateTime!
    available_to: DateTime
}

type ProductDiscount @modelClass(class: "MayIFit\\Extension\\Shop\\Models\\ProductDiscount") {
    id: ID!
    product: Product! @belongsTo
    discount_percentage: Float!
    available_from: DateTime!
    available_to: DateTime
    reseller: Reseller
}