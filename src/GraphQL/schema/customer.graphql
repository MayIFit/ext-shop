extend type Query @guard(with: ["sanctum"]) {
    listCustomer(
        first_name: String @where(operator: "like")
        last_name: String @where(operator: "like")
    ): [Customer]!
        @can(ability: "viewAny" model: "MayIFit\\Extension\\Shop\\Models\\Customer") 
        @paginate(type: "paginator")

    viewCustomer(
        id: ID @eq
    ): Customer @can(ability: "view" find: "id") @find

    listRetailUser: [User]! 
        @field(resolver: "AllRetailUser@resolve")

}

extend type Mutation {
    createCustomer(input: CreateCustomerInput! @spread): Customer 
        @create
}

extend type Mutation @guard(with: ["sanctum"]) {
    updateCustomer(input: UpdateCustomerInput! @spread): Customer 
        @can(ability: "update" find: "id")
        @update
}

input UpdateCustomerRelation {
    create: [CreateCustomerInput!]
    update: [UpdateCustomerInput!]
}

input CreateCustomerInput {
    title: String
    first_name: String!
    last_name: String!
    country: String!
    city: String!
    zip_code: String!
    address: String!
    house_nr: String!
    floor: String
    door: String
    phone_number: String!
    email: String!
    company_name: String
    vat_id: String
    billing_address: Boolean
    user: UpdateUserRelation
}

input UpdateCustomerInput {
    id: ID!
    title: String
    first_name: String!
    last_name: String!
    country: String!
    city: String!
    zip_code: String!
    address: String!
    house_nr: String!
    floor: String
    door: String
    phone_number: String!
    email: String!
    company_name: String
    vat_id: String
    billing_address: Boolean
    user: UpdateUserRelation
}

input UpdateUserRelation {
    connect: ID
}

type Customer @modelClass(class: "\\MayIFit\\Extension\\Shop\\Models\\Customer") {
    id: ID!
    user: User @belongsTo
    title: String
    first_name: String!
    last_name: String!
    country: String!
    city: String!
    zip_code: String!
    address: String!
    house_nr: String!
    floor: String
    door: String
    phone_number: String!
    email: String!
    company_name: String
    vat_id: String
    billing_address: Boolean
    orders: [Order]! @hasMany
}

extend type User {
    customers: Customer @hasMany
    reseller: Boolean
}

extend input UpdateUserInput {
    customers: UpdateCustomerRelation
    reseller: Boolean
}